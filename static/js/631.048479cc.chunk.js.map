{"version":3,"file":"static/js/631.048479cc.chunk.js","mappings":"+GAAA,MAAMA,EAAaC,EAAQ,OACrBC,EAAwBD,EAAQ,OAEhCE,EAAc,MAACC,EAAW,KAAM,SAEtCC,EAAOC,QAGP,WAA+C,IAAXC,EAAW,uDAAJ,GAEzC,MAAM,aAAEC,GAAiBD,EACzB,IAAKC,EAAc,MAAM,IAAIC,MAAM,0DAGnC,MAAMC,EAAa,IAAIC,EACjBC,EAAa,CACjBC,MAAOH,EACPI,MAAOJ,EACPK,KAAML,GAGR,OAAOR,GAAsBc,MAAOC,EAAKC,EAAKC,KAE5C,GAAIF,EAAIG,UACN,OAAOD,IAGT,MAAME,EAAOrB,EAAWsB,oBAAoBL,GACtCM,EAAWX,EAAWS,GAE5B,IAAKE,EACH,OAAOJ,IAGT,IAAKI,EAASC,gBAAgBP,GAC5B,OAAOE,IAIT,IAIIM,EAJAC,EAAW1B,EAAW2B,mBAAmBV,GAK7C,GAJKS,IAAUA,EAAW,UAIT,aAAbA,EAEFD,EAAuB,YAClB,GAAiB,WAAbC,EAAuB,CAEhC,MAAME,QAA0BpB,EAAaqB,iBAE7CnB,EAAWoB,YAAYF,GACvBH,EAAuBG,OAGvBH,EAAuBC,EAIzB,MAAMK,QAAoBR,EAASS,IAAIf,EAAKQ,QACxBrB,IAAhB2B,SAGIZ,UAEAI,EAASU,IAAIhB,EAAKQ,EAAsBP,EAAIgB,SAGlDhB,EAAIgB,OAASH,MAUnB,MAAMpB,EAEJwB,cACEC,KAAKC,MAAQ,GAGfC,wBAAyBC,EAASC,GAChC,MAAMC,EAAcC,OAAOC,SAASH,EAAgB,IACpD,IAAI9B,EAAa0B,KAAKC,MAAMI,GAE5B,IAAK/B,EAAY,CACf,MAAMkC,EAAW,GACjBR,KAAKC,MAAMI,GAAeG,EAC1BlC,EAAakC,EAEf,OAAOlC,EAGA,UAAE6B,EAASd,GAElB,MAAMf,EAAa0B,KAAKE,wBAAwBC,EAASd,GACzD,IAAKf,EAAY,OAKjB,OAFeA,EADIV,EAAW6C,0BAA0BN,GAAS,IAM1D,UAAEA,EAASd,EAAsBS,GAGxC,IADiBE,KAAKU,eAAeP,EAASL,GAC/B,OAEIE,KAAKE,wBAAwBC,EAASd,GACtCzB,EAAW6C,0BAA0BN,GAAS,IACxCL,EAG3BV,gBAAiBe,GAEf,IAAKvC,EAAW+C,SAASR,GACvB,OAAO,EAIT,MAAiB,YADAvC,EAAW2B,mBAAmBY,GAQjDO,eAAgBP,EAASL,GAEvB,IAAI/B,EAAY6C,SAASd,GAEzB,UAAI,CAAC,2BAA4B,6BAA6Bc,SAAST,EAAQU,SACxEf,GAAWA,EAAOgB,WAAkC,uEAArBhB,EAAOgB,WAS/CpB,YAAaqB,GACX,MAAMC,EAAOhB,KACPiB,EAAiBX,OAAOC,SAASQ,EAAa,IAEpDG,OAAOC,KAAKH,EAAKf,OACdmB,IAAId,QACJe,QAAOC,GAAOA,EAAML,IACpBM,SAAQD,UAAcN,EAAKf,MAAMqB,Q,gBCxJxC,MAAME,EAAY3D,EAAQ,OAoB1B,SAAS8C,EAAUR,GACjB,MAAwC,UAAjCjB,EAAoBiB,GAc7B,SAASsB,EAAuBtB,GAC9B,MAAMuB,EAAQC,EAAmBxB,GAGjC,OAAIuB,GAASvB,EAAQyB,OAAOC,OACnB1B,EAAQyB,OAIM,yBAAnBzB,EAAQU,OACHV,EAAQyB,OAAOE,MAAM,GAGvB3B,EAAQyB,OAAOE,MAAM,EAAGJ,GAGjC,SAASC,EAAoBxB,GAC3B,OAAQA,EAAQU,QAEd,IAAK,mBACH,OAAO,EAET,IAAK,iBACL,IAAK,cACL,IAAK,0BACL,IAAK,WACH,OAAO,EAET,IAAK,uBACH,OAAO,EAET,QACE,QAIN,SAAS3B,EAAqBiB,GAC5B,OAAQA,EAAQU,QAEd,IAAK,qBACL,IAAK,YACL,IAAK,sBACL,IAAK,qCACL,IAAK,+BACL,IAAK,cACL,IAAK,qBACL,IAAK,2BACL,IAAK,wCACL,IAAK,4BACL,IAAK,kCACL,IAAK,mBACL,IAAK,iBACL,IAAK,sBACL,IAAK,qBACL,IAAK,cACL,IAAK,kBACH,MAAO,QAGT,IAAK,uBACL,IAAK,uCACL,IAAK,iCACL,IAAK,0CACL,IAAK,oCACL,IAAK,iBACH,MAAO,OAGT,IAAK,eACL,IAAK,kBACL,IAAK,iBACL,IAAK,mBACL,IAAK,0BACL,IAAK,WACL,IAAK,kBACL,IAAK,oBACL,IAAK,cACL,IAAK,kBACH,MAAO,QAGT,IAAK,cACL,IAAK,gBACL,IAAK,gBACL,IAAK,cACL,IAAK,WACL,IAAK,eACL,IAAK,aACL,IAAK,eACL,IAAK,eACL,IAAK,sBACL,IAAK,yBACL,IAAK,gBACL,IAAK,qBACL,IAAK,kCACL,IAAK,sBACL,IAAK,uBACL,IAAK,cACL,IAAK,iBACL,IAAK,qBACL,IAAK,eACL,IAAK,eACL,IAAK,YACL,IAAK,YACL,IAAK,WACL,IAAK,kBACL,IAAK,kBACL,IAAK,eACL,IAAK,iBACL,IAAK,gBACL,IAAK,sBACL,IAAK,uBACL,IAAK,kBACL,IAAK,kBACH,MAAO,SAnJb5C,EAAOC,QAAU,CACfuC,0BAQF,SAAoCN,EAAS4B,GAC3C,MAAMC,EAAeD,EAAeN,EAAsBtB,GAAWA,EAAQyB,OAC7E,OAAIjB,EAASR,GACJA,EAAQU,OAAS,IAAMW,EAAUQ,GAEjC,MAZTrB,SAAUA,EACVpB,mBAmBF,SAA6BY,GAC3B,IAAIuB,EAAQC,EAAmBxB,GAG/B,GAAIuB,GAASvB,EAAQyB,OAAOC,OAC1B,OAAO,KAGT,OAAO1B,EAAQyB,OAAOF,IA1BtBD,sBAAuBA,EACvBE,mBAAoBA,EACpBzC,oBAAqBA,I,UCUvBjB,EAAOC,QAAU,SAAgC+D,GAC/C,MAAO,CAACpD,EAAKC,EAAKC,EAAMmD,KAKtB,IAAIC,EACJ,MAAMC,EAAc,IAAIC,SAASC,IAC/BH,EAAqBG,KAGvB,IAAIC,EAAuBC,EAa3BP,EAAgBpD,EAAKC,GAXHF,UAEhB4D,GAAgB,EAEhBzD,GAAM0D,IACJF,EAAwBE,EACxBN,aAEIC,KAILM,MAAK9D,UACA4D,SACIJ,EACNG,EAAsB,OAEtBL,EAAI,SAGPS,OAAOC,IACFL,EACFA,EAAsBK,GAEtBV,EAAIU,S,mDCnDd,IAAIC,EAAUhF,EAAQ,OAClBiF,EAAOjF,EAAQ,OACfkF,EAAKF,EAAQE,GAGbC,EAAU,IAAID,EAAG,mEAAoE,IAuCrFE,EAAc,WAChB,SAASA,EAAYC,IA/CvB,SAAyBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAgD5GC,CAAgBtD,KAAMiD,GAEtBC,EAAOA,GAAQ,GAEf,IAAIK,EAAS,CAAC,CACZC,KAAM,QACN3B,OAAQ,GACR4B,WAAW,EACXC,QAAS,IAAIC,EAAO,KACnB,CACDH,KAAM,WACN3B,OAAQ,GACR4B,WAAW,EACXC,QAAS,IAAIC,EAAO,KACnB,CACDH,KAAM,WACNI,MAAO,MACP/B,OAAQ,GACR4B,WAAW,EACXC,QAAS,IAAIC,EAAO,KACnB,CACDH,KAAM,KACNK,WAAW,EACXhC,OAAQ,GACR6B,QAAS,IAAIC,EAAO,KACnB,CACDH,KAAM,QACN3B,OAAQ,GACR4B,WAAW,EACXC,QAAS,IAAIC,EAAO,KACnB,CACDH,KAAM,OACNI,MAAO,QACPC,WAAW,EACXH,QAAS,IAAIC,EAAO,KACnB,CACDH,KAAM,IACNK,WAAW,EACXH,QAAS,IAAIC,EAAO,CAAC,MACpB,CACDH,KAAM,IACN3B,OAAQ,GACRgC,WAAW,EACXJ,WAAW,EACXC,QAAS,IAAIC,EAAO,KACnB,CACDH,KAAM,IACN3B,OAAQ,GACRgC,WAAW,EACXJ,WAAW,EACXC,QAAS,IAAIC,EAAO,MAWtBd,EAAQiB,iBAAiB9D,KAAMuD,EAAQL,GAOvChC,OAAO6C,eAAe/D,KAAM,OAAQ,CAClCgE,YAAY,EACZC,cAAc,EACdrE,IAAKI,KAAKkE,iBAAiBC,KAAKnE,QAIlC,IAAIoE,EAAOvB,EAAQwB,YAAYrE,KAAKsE,GAChCC,EAAUC,KAAKC,OAAOL,EAAO,IAAM,GACnCG,EAAU,IAAGA,EAAU,GAG3BvE,KAAK0E,SAAWH,GAAWrB,EAAKqB,SAAW,EAC3CvE,KAAK2E,YAAa,EA8LpB,OArLA1B,EAAY2B,UAAUC,kBAAoB,WACxC,MAAmC,KAA5B7E,KAAK8E,GAAGC,SAAS,QAU1B9B,EAAY2B,UAAUI,KAAO,SAAcC,QAChBjH,IAArBiH,IAAgCA,GAAmB,GAOvD,IAAIC,OAAQ,EACZ,GAAID,EACFC,EAAQlF,KAAKmF,SAEb,GAAInF,KAAK0E,SAAW,EAAG,CACrB,IAAIS,EAAMnF,KAAKmF,IAAIrD,QACnB9B,KAAKsE,EAAItE,KAAK0E,SACd1E,KAAKoF,EAAI,EACTpF,KAAKqF,EAAI,EACTH,EAAQlF,KAAKmF,IACbnF,KAAKmF,IAAMA,OAEXD,EAAQlF,KAAKmF,IAAIrD,MAAM,EAAG,GAK9B,OAAOe,EAAQyC,QAAQJ,IASzBjC,EAAY2B,UAAUW,WAAa,WACjC,OAAOvF,KAAK0E,UASdzB,EAAY2B,UAAUV,iBAAmB,WACvC,GAAIlE,KAAKwF,MACP,OAAOxF,KAAKwF,MAEd,IAAIC,EAASzF,KAAK0F,qBAElB,OADA1F,KAAKwF,MAAQ3C,EAAQ8C,gBAAgBF,GAC9BzF,KAAKwF,OASdvC,EAAY2B,UAAUc,mBAAqB,WACzC,KAAK1F,KAAK4F,gBAAkB5F,KAAK4F,cAAc/D,UACxC7B,KAAK6F,kBAAmB,MAAM,IAAIxH,MAAM,qBAE/C,OAAO2B,KAAK4F,eASd3C,EAAY2B,UAAUiB,gBAAkB,WACtC,IAAIC,EAAU9F,KAAKgF,MAAK,GAExB,GAAIhF,KAAK2E,YAA8C,IAAhC,IAAI5B,EAAG/C,KAAKqF,GAAGU,IAAI/C,GACxC,OAAO,EAGT,IACE,IAAIsB,EAAIzB,EAAQwB,YAAYrE,KAAKsE,GAC7BtE,KAAK0E,SAAW,IAClBJ,GAAqB,EAAhBtE,KAAK0E,SAAe,GAE3B1E,KAAK4F,cAAgB/C,EAAQmD,UAAUF,EAASxB,EAAGtE,KAAKoF,EAAGpF,KAAKqF,GAChE,MAAOY,GACP,OAAO,EAGT,QAASjG,KAAK4F,eAShB3C,EAAY2B,UAAUsB,KAAO,SAAcC,GACzC,IAAIL,EAAU9F,KAAKgF,MAAK,GACpBoB,EAAMvD,EAAQwD,OAAOP,EAASK,GAC9BnG,KAAK0E,SAAW,IAClB0B,EAAI9B,GAAqB,EAAhBtE,KAAK0E,SAAe,GAE/BxD,OAAOoF,OAAOtG,KAAMoG,IAStBnD,EAAY2B,UAAU2B,WAAa,WAGjC,IAFA,IAAIrD,EAAOlD,KAAKmF,IAAI,GAChBqB,EAAO,IAAIzD,EAAG,GACT0D,EAAI,EAAGA,EAAIvD,EAAKrB,OAAQ4E,IACnB,IAAZvD,EAAKuD,GAAWD,EAAKE,MAAM5D,EAAK6D,cAAcrC,GAAKkC,EAAKE,MAAM5D,EAAK8D,iBAAiBtC,GAEtF,OAAOkC,GASTvD,EAAY2B,UAAUiC,WAAa,WACjC,IAAIC,EAAM9G,KAAKuG,aAAaG,MAAM5D,EAAKiE,MAAMzC,GAI7C,OAHItE,KAAK2E,YAAc3E,KAAK6E,qBAC1BiC,EAAIJ,MAAM5D,EAAKkE,WAAW1C,GAErBwC,GAST7D,EAAY2B,UAAUqC,eAAiB,WACrC,OAAO,IAAIlE,EAAG/C,KAAKkH,UAAUC,KAAK,IAAIpE,EAAG/C,KAAKoH,WAAWC,KAAK,IAAItE,EAAG/C,KAAKsH,SAU5ErE,EAAY2B,UAAU2C,SAAW,SAAkBC,GACjD,IAAIC,EAAS,GASb,OARKzH,KAAK6F,mBACR4B,EAAOC,KAAK,qBAGV1H,KAAK6G,aAAad,IAAI,IAAIhD,EAAG/C,KAAKkH,WAAa,GACjDO,EAAOC,KAAK,CAAC,uCAAyC1H,KAAK6G,oBAGzC7I,IAAhBwJ,IAA6C,IAAhBA,EACN,IAAlBC,EAAO5F,OAEP4F,EAAOE,KAAK,MAIhB1E,EAjRS,GAoRlBhF,EAAOC,QAAU+E,G","sources":["../node_modules/eth-json-rpc-middleware/block-cache.js","../node_modules/eth-json-rpc-middleware/cache-utils.js","../node_modules/eth-json-rpc-middleware/node_modules/json-rpc-engine/src/createAsyncMiddleware.js","../node_modules/ethereumjs-tx/es5/index.js"],"sourcesContent":["const cacheUtils = require('./cache-utils.js')\nconst createAsyncMiddleware = require('json-rpc-engine/src/createAsyncMiddleware')\n// `<nil>` comes from https://github.com/ethereum/go-ethereum/issues/16925\nconst emptyValues = [undefined, null, '\\u003cnil\\u003e']\n\nmodule.exports = createBlockCacheMiddleware\n\n\nfunction createBlockCacheMiddleware(opts = {}) {\n  // validate options\n  const { blockTracker } = opts\n  if (!blockTracker) throw new Error('createBlockCacheMiddleware - No BlockTracker specified')\n\n  // create caching strategies\n  const blockCache = new BlockCacheStrategy()\n  const strategies = {\n    perma: blockCache,\n    block: blockCache,\n    fork: blockCache,\n  }\n\n  return createAsyncMiddleware(async (req, res, next) => {\n    // allow cach to be skipped if so specified\n    if (req.skipCache) {\n      return next()\n    }\n    // check type and matching strategy\n    const type = cacheUtils.cacheTypeForPayload(req)\n    const strategy = strategies[type]\n    // If there's no strategy in place, pass it down the chain.\n    if (!strategy) {\n      return next()\n    }\n    // If the strategy can't cache this request, ignore it.\n    if (!strategy.canCacheRequest(req)) {\n      return next()\n    }\n\n    // get block reference (number or keyword)\n    let blockTag = cacheUtils.blockTagForPayload(req)\n    if (!blockTag) blockTag = 'latest'\n\n    // get exact block number\n    let requestedBlockNumber\n    if (blockTag === 'earliest') {\n      // this just exists for symmetry with \"latest\"\n      requestedBlockNumber = '0x00'\n    } else if (blockTag === 'latest') {\n      // fetch latest block number\n      const latestBlockNumber = await blockTracker.getLatestBlock()\n      // clear all cache before latest block\n      blockCache.clearBefore(latestBlockNumber)\n      requestedBlockNumber = latestBlockNumber\n    } else {\n      // We have a hex number\n      requestedBlockNumber = blockTag\n    }\n\n    // end on a hit, continue on a miss\n    const cacheResult = await strategy.get(req, requestedBlockNumber)\n    if (cacheResult === undefined) {\n      // cache miss\n      // wait for other middleware to handle request\n      await next()\n      // add result to cache\n      await strategy.set(req, requestedBlockNumber, res.result)\n    } else {\n      // fill in result from cache\n      res.result = cacheResult\n    }\n  })\n}\n\n\n//\n// Cache Strategies\n//\n\nclass BlockCacheStrategy {\n  \n  constructor () {\n    this.cache = {}\n  }\n\n  getBlockCacheForPayload (payload, blockNumberHex) {\n    const blockNumber = Number.parseInt(blockNumberHex, 16)\n    let blockCache = this.cache[blockNumber]\n    // create new cache if necesary\n    if (!blockCache) {\n      const newCache = {}\n      this.cache[blockNumber] = newCache\n      blockCache = newCache\n    }\n    return blockCache\n  }\n\n  async get (payload, requestedBlockNumber) {\n    // lookup block cache\n    const blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber)\n    if (!blockCache) return\n    // lookup payload in block cache\n    const identifier = cacheUtils.cacheIdentifierForPayload(payload, true)\n    const cached = blockCache[identifier]\n    // may be undefined\n    return cached\n  }\n\n  async set (payload, requestedBlockNumber, result) {\n    // check if we can cached this result\n    const canCache = this.canCacheResult(payload, result)\n    if (!canCache) return\n    // set the value in the cache\n    const blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber)\n    const identifier = cacheUtils.cacheIdentifierForPayload(payload, true)\n    blockCache[identifier] = result\n  }\n\n  canCacheRequest (payload) {\n    // check request method\n    if (!cacheUtils.canCache(payload)) {\n      return false\n    }\n    // check blockTag\n    const blockTag = cacheUtils.blockTagForPayload(payload)\n    if (blockTag === 'pending') {\n      return false\n    }\n    // can be cached\n    return true\n  }\n\n  canCacheResult (payload, result) {\n    // never cache empty values (e.g. undefined)\n    if (emptyValues.includes(result)) return\n    // check if transactions have block reference before caching\n    if (['eth_getTransactionByHash', 'eth_getTransactionReceipt'].includes(payload.method)) {\n      if (!result || !result.blockHash || result.blockHash === '0x0000000000000000000000000000000000000000000000000000000000000000') {\n        return false\n      }\n    }\n    // otherwise true\n    return true\n  }\n\n  // removes all block caches with block number lower than `oldBlockHex`\n  clearBefore (oldBlockHex){\n    const self = this\n    const oldBlockNumber = Number.parseInt(oldBlockHex, 16)\n    // clear old caches\n    Object.keys(self.cache)\n      .map(Number)\n      .filter(num => num < oldBlockNumber)\n      .forEach(num => delete self.cache[num])\n  }\n\n}\n","const stringify = require('json-stable-stringify')\n\nmodule.exports = {\n  cacheIdentifierForPayload: cacheIdentifierForPayload,\n  canCache: canCache,\n  blockTagForPayload: blockTagForPayload,\n  paramsWithoutBlockTag: paramsWithoutBlockTag,\n  blockTagParamIndex: blockTagParamIndex,\n  cacheTypeForPayload: cacheTypeForPayload\n}\n\nfunction cacheIdentifierForPayload (payload, skipBlockRef) {\n  const simpleParams = skipBlockRef ? paramsWithoutBlockTag(payload) : payload.params\n  if (canCache(payload)) {\n    return payload.method + ':' + stringify(simpleParams)\n  } else {\n    return null\n  }\n}\n\nfunction canCache (payload) {\n  return cacheTypeForPayload(payload) !== 'never'\n}\n\nfunction blockTagForPayload (payload) {\n  let index = blockTagParamIndex(payload)\n\n  // Block tag param not passed.\n  if (index >= payload.params.length) {\n    return null\n  }\n\n  return payload.params[index]\n}\n\nfunction paramsWithoutBlockTag (payload) {\n  const index = blockTagParamIndex(payload)\n\n  // Block tag param not passed.\n  if (index >= payload.params.length) {\n    return payload.params\n  }\n\n  // eth_getBlockByNumber has the block tag first, then the optional includeTx? param\n  if (payload.method === 'eth_getBlockByNumber') {\n    return payload.params.slice(1)\n  }\n\n  return payload.params.slice(0, index)\n}\n\nfunction blockTagParamIndex (payload) {\n  switch (payload.method) {\n    // blockTag is at index 2\n    case 'eth_getStorageAt':\n      return 2\n    // blockTag is at index 1\n    case 'eth_getBalance':\n    case 'eth_getCode':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n      return 1\n    // blockTag is at index 0\n    case 'eth_getBlockByNumber':\n      return 0\n    // there is no blockTag\n    default:\n      return undefined\n  }\n}\n\nfunction cacheTypeForPayload (payload) {\n  switch (payload.method) {\n    // cache permanently\n    case 'web3_clientVersion':\n    case 'web3_sha3':\n    case 'eth_protocolVersion':\n    case 'eth_getBlockTransactionCountByHash':\n    case 'eth_getUncleCountByBlockHash':\n    case 'eth_getCode':\n    case 'eth_getBlockByHash':\n    case 'eth_getTransactionByHash':\n    case 'eth_getTransactionByBlockHashAndIndex':\n    case 'eth_getTransactionReceipt':\n    case 'eth_getUncleByBlockHashAndIndex':\n    case 'eth_getCompilers':\n    case 'eth_compileLLL':\n    case 'eth_compileSolidity':\n    case 'eth_compileSerpent':\n    case 'shh_version':\n    case 'test_permaCache':\n      return 'perma'\n\n    // cache until fork\n    case 'eth_getBlockByNumber':\n    case 'eth_getBlockTransactionCountByNumber':\n    case 'eth_getUncleCountByBlockNumber':\n    case 'eth_getTransactionByBlockNumberAndIndex':\n    case 'eth_getUncleByBlockNumberAndIndex':\n    case 'test_forkCache':\n      return 'fork'\n\n    // cache for block\n    case 'eth_gasPrice':\n    case 'eth_blockNumber':\n    case 'eth_getBalance':\n    case 'eth_getStorageAt':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n    case 'eth_estimateGas':\n    case 'eth_getFilterLogs':\n    case 'eth_getLogs':\n    case 'test_blockCache':\n      return 'block'\n\n    // never cache\n    case 'net_version':\n    case 'net_peerCount':\n    case 'net_listening':\n    case 'eth_syncing':\n    case 'eth_sign':\n    case 'eth_coinbase':\n    case 'eth_mining':\n    case 'eth_hashrate':\n    case 'eth_accounts':\n    case 'eth_sendTransaction':\n    case 'eth_sendRawTransaction':\n    case 'eth_newFilter':\n    case 'eth_newBlockFilter':\n    case 'eth_newPendingTransactionFilter':\n    case 'eth_uninstallFilter':\n    case 'eth_getFilterChanges':\n    case 'eth_getWork':\n    case 'eth_submitWork':\n    case 'eth_submitHashrate':\n    case 'db_putString':\n    case 'db_getString':\n    case 'db_putHex':\n    case 'db_getHex':\n    case 'shh_post':\n    case 'shh_newIdentity':\n    case 'shh_hasIdentity':\n    case 'shh_newGroup':\n    case 'shh_addToGroup':\n    case 'shh_newFilter':\n    case 'shh_uninstallFilter':\n    case 'shh_getFilterChanges':\n    case 'shh_getMessages':\n    case 'test_neverCache':\n      return 'never'\n  }\n}\n","/**\n * JsonRpcEngine only accepts callback-based middleware directly.\n * createAsyncMiddleware exists to enable consumers to pass in async middleware\n * functions.\n *\n * Async middleware have no \"end\" function. Instead, they \"end\" if they return\n * without calling \"next\". Rather than passing in explicit return handlers,\n * async middleware can simply await \"next\", and perform operations on the\n * response object when execution resumes.\n *\n * To accomplish this, createAsyncMiddleware passes the async middleware a\n * wrapped \"next\" function. That function calls the internal JsonRpcEngine\n * \"next\" function with a return handler that resolves a promise when called.\n *\n * The return handler will always be called. Its resolution of the promise\n * enables the control flow described above.\n */\n\nmodule.exports = function createAsyncMiddleware (asyncMiddleware) {\n  return (req, res, next, end) => {\n\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise\n    const nextPromise = new Promise((resolve) => {\n      resolveNextPromise = resolve\n    })\n\n    let returnHandlerCallback, nextWasCalled\n\n    const asyncNext = async () => {\n\n      nextWasCalled = true\n\n      next((callback) => { // eslint-disable-line callback-return\n        returnHandlerCallback = callback\n        resolveNextPromise()\n      })\n      await nextPromise\n    }\n\n    asyncMiddleware(req, res, asyncNext)\n      .then(async () => {\n        if (nextWasCalled) {\n          await nextPromise // we must wait until the return handler is called\n          returnHandlerCallback(null)\n        } else {\n          end(null)\n        }\n      })\n      .catch((error) => {\n        if (returnHandlerCallback) {\n          returnHandlerCallback(error)\n        } else {\n          end(error)\n        }\n      })\n  }\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ethUtil = require('ethereumjs-util');\nvar fees = require('ethereum-common/params.json');\nvar BN = ethUtil.BN;\n\n// secp256k1n/2\nvar N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n\n/**\n * Creates a new transaction object.\n *\n * @example\n * var rawTx = {\n *   nonce: '00',\n *   gasPrice: '09184e72a000',\n *   gasLimit: '2710',\n *   to: '0000000000000000000000000000000000000000',\n *   value: '00',\n *   data: '7f7465737432000000000000000000000000000000000000000000000000000000600057',\n *   v: '1c',\n *   r: '5e1d3a76fbf824220eafc8c79ad578ad2b67d01b0c2425eb1f1347e8f50882ab',\n *   s: '5bd428537f05f9830e93792f90ea6a3e2d1ee84952dd96edbae9f658f831ab13'\n * };\n * var tx = new Transaction(rawTx);\n *\n * @class\n * @param {Buffer | Array | Object} data a transaction can be initiailized with either a buffer containing the RLP serialized transaction or an array of buffers relating to each of the tx Properties, listed in order below in the exmple.\n *\n * Or lastly an Object containing the Properties of the transaction like in the Usage example.\n *\n * For Object and Arrays each of the elements can either be a Buffer, a hex-prefixed (0x) String , Number, or an object with a toBuffer method such as Bignum\n *\n * @property {Buffer} raw The raw rlp encoded transaction\n * @param {Buffer} data.nonce nonce number\n * @param {Buffer} data.gasLimit transaction gas limit\n * @param {Buffer} data.gasPrice transaction gas price\n * @param {Buffer} data.to to the to address\n * @param {Buffer} data.value the amount of ether sent\n * @param {Buffer} data.data this will contain the data of the message or the init of a contract\n * @param {Buffer} data.v EC signature parameter\n * @param {Buffer} data.r EC signature parameter\n * @param {Buffer} data.s EC recovery ID\n * @param {Number} data.chainId EIP 155 chainId - mainnet: 1, ropsten: 3\n * */\n\nvar Transaction = function () {\n  function Transaction(data) {\n    _classCallCheck(this, Transaction);\n\n    data = data || {};\n    // Define Properties\n    var fields = [{\n      name: 'nonce',\n      length: 32,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 'gasPrice',\n      length: 32,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 'gasLimit',\n      alias: 'gas',\n      length: 32,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 'to',\n      allowZero: true,\n      length: 20,\n      default: new Buffer([])\n    }, {\n      name: 'value',\n      length: 32,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 'data',\n      alias: 'input',\n      allowZero: true,\n      default: new Buffer([])\n    }, {\n      name: 'v',\n      allowZero: true,\n      default: new Buffer([0x1c])\n    }, {\n      name: 'r',\n      length: 32,\n      allowZero: true,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 's',\n      length: 32,\n      allowZero: true,\n      allowLess: true,\n      default: new Buffer([])\n    }];\n\n    /**\n     * Returns the rlp encoding of the transaction\n     * @method serialize\n     * @return {Buffer}\n     * @memberof Transaction\n     * @name serialize\n     */\n    // attached serialize\n    ethUtil.defineProperties(this, fields, data);\n\n    /**\n     * @property {Buffer} from (read only) sender address of this transaction, mathematically derived from other parameters.\n     * @name from\n     * @memberof Transaction\n     */\n    Object.defineProperty(this, 'from', {\n      enumerable: true,\n      configurable: true,\n      get: this.getSenderAddress.bind(this)\n    });\n\n    // calculate chainId from signature\n    var sigV = ethUtil.bufferToInt(this.v);\n    var chainId = Math.floor((sigV - 35) / 2);\n    if (chainId < 0) chainId = 0;\n\n    // set chainId\n    this._chainId = chainId || data.chainId || 0;\n    this._homestead = true;\n  }\n\n  /**\n   * If the tx's `to` is to the creation address\n   * @return {Boolean}\n   */\n\n\n  Transaction.prototype.toCreationAddress = function toCreationAddress() {\n    return this.to.toString('hex') === '';\n  };\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx\n   * @param {Boolean} [includeSignature=true] whether or not to inculde the signature\n   * @return {Buffer}\n   */\n\n\n  Transaction.prototype.hash = function hash(includeSignature) {\n    if (includeSignature === undefined) includeSignature = true;\n\n    // EIP155 spec:\n    // when computing the hash of a transaction for purposes of signing or recovering,\n    // instead of hashing only the first six elements (ie. nonce, gasprice, startgas, to, value, data),\n    // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0\n\n    var items = void 0;\n    if (includeSignature) {\n      items = this.raw;\n    } else {\n      if (this._chainId > 0) {\n        var raw = this.raw.slice();\n        this.v = this._chainId;\n        this.r = 0;\n        this.s = 0;\n        items = this.raw;\n        this.raw = raw;\n      } else {\n        items = this.raw.slice(0, 6);\n      }\n    }\n\n    // create hash\n    return ethUtil.rlphash(items);\n  };\n\n  /**\n   * returns the public key of the sender\n   * @return {Buffer}\n   */\n\n\n  Transaction.prototype.getChainId = function getChainId() {\n    return this._chainId;\n  };\n\n  /**\n   * returns the sender's address\n   * @return {Buffer}\n   */\n\n\n  Transaction.prototype.getSenderAddress = function getSenderAddress() {\n    if (this._from) {\n      return this._from;\n    }\n    var pubkey = this.getSenderPublicKey();\n    this._from = ethUtil.publicToAddress(pubkey);\n    return this._from;\n  };\n\n  /**\n   * returns the public key of the sender\n   * @return {Buffer}\n   */\n\n\n  Transaction.prototype.getSenderPublicKey = function getSenderPublicKey() {\n    if (!this._senderPubKey || !this._senderPubKey.length) {\n      if (!this.verifySignature()) throw new Error('Invalid Signature');\n    }\n    return this._senderPubKey;\n  };\n\n  /**\n   * Determines if the signature is valid\n   * @return {Boolean}\n   */\n\n\n  Transaction.prototype.verifySignature = function verifySignature() {\n    var msgHash = this.hash(false);\n    // All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    if (this._homestead && new BN(this.s).cmp(N_DIV_2) === 1) {\n      return false;\n    }\n\n    try {\n      var v = ethUtil.bufferToInt(this.v);\n      if (this._chainId > 0) {\n        v -= this._chainId * 2 + 8;\n      }\n      this._senderPubKey = ethUtil.ecrecover(msgHash, v, this.r, this.s);\n    } catch (e) {\n      return false;\n    }\n\n    return !!this._senderPubKey;\n  };\n\n  /**\n   * sign a transaction with a given a private key\n   * @param {Buffer} privateKey\n   */\n\n\n  Transaction.prototype.sign = function sign(privateKey) {\n    var msgHash = this.hash(false);\n    var sig = ethUtil.ecsign(msgHash, privateKey);\n    if (this._chainId > 0) {\n      sig.v += this._chainId * 2 + 8;\n    }\n    Object.assign(this, sig);\n  };\n\n  /**\n   * The amount of gas paid for the data in this tx\n   * @return {BN}\n   */\n\n\n  Transaction.prototype.getDataFee = function getDataFee() {\n    var data = this.raw[5];\n    var cost = new BN(0);\n    for (var i = 0; i < data.length; i++) {\n      data[i] === 0 ? cost.iaddn(fees.txDataZeroGas.v) : cost.iaddn(fees.txDataNonZeroGas.v);\n    }\n    return cost;\n  };\n\n  /**\n   * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   * @return {BN}\n   */\n\n\n  Transaction.prototype.getBaseFee = function getBaseFee() {\n    var fee = this.getDataFee().iaddn(fees.txGas.v);\n    if (this._homestead && this.toCreationAddress()) {\n      fee.iaddn(fees.txCreation.v);\n    }\n    return fee;\n  };\n\n  /**\n   * the up front amount that an account must have for this transaction to be valid\n   * @return {BN}\n   */\n\n\n  Transaction.prototype.getUpfrontCost = function getUpfrontCost() {\n    return new BN(this.gasLimit).imul(new BN(this.gasPrice)).iadd(new BN(this.value));\n  };\n\n  /**\n   * validates the signature and checks to see if it has enough gas\n   * @param {Boolean} [stringError=false] whether to return a string with a dscription of why the validation failed or return a Bloolean\n   * @return {Boolean|String}\n   */\n\n\n  Transaction.prototype.validate = function validate(stringError) {\n    var errors = [];\n    if (!this.verifySignature()) {\n      errors.push('Invalid Signature');\n    }\n\n    if (this.getBaseFee().cmp(new BN(this.gasLimit)) > 0) {\n      errors.push(['gas limit is too low. Need at least ' + this.getBaseFee()]);\n    }\n\n    if (stringError === undefined || stringError === false) {\n      return errors.length === 0;\n    } else {\n      return errors.join(' ');\n    }\n  };\n\n  return Transaction;\n}();\n\nmodule.exports = Transaction;"],"names":["cacheUtils","require","createAsyncMiddleware","emptyValues","undefined","module","exports","opts","blockTracker","Error","blockCache","BlockCacheStrategy","strategies","perma","block","fork","async","req","res","next","skipCache","type","cacheTypeForPayload","strategy","canCacheRequest","requestedBlockNumber","blockTag","blockTagForPayload","latestBlockNumber","getLatestBlock","clearBefore","cacheResult","get","set","result","constructor","this","cache","getBlockCacheForPayload","payload","blockNumberHex","blockNumber","Number","parseInt","newCache","cacheIdentifierForPayload","canCacheResult","canCache","includes","method","blockHash","oldBlockHex","self","oldBlockNumber","Object","keys","map","filter","num","forEach","stringify","paramsWithoutBlockTag","index","blockTagParamIndex","params","length","slice","skipBlockRef","simpleParams","asyncMiddleware","end","resolveNextPromise","nextPromise","Promise","resolve","returnHandlerCallback","nextWasCalled","callback","then","catch","error","ethUtil","fees","BN","N_DIV_2","Transaction","data","instance","Constructor","TypeError","_classCallCheck","fields","name","allowLess","default","Buffer","alias","allowZero","defineProperties","defineProperty","enumerable","configurable","getSenderAddress","bind","sigV","bufferToInt","v","chainId","Math","floor","_chainId","_homestead","prototype","toCreationAddress","to","toString","hash","includeSignature","items","raw","r","s","rlphash","getChainId","_from","pubkey","getSenderPublicKey","publicToAddress","_senderPubKey","verifySignature","msgHash","cmp","ecrecover","e","sign","privateKey","sig","ecsign","assign","getDataFee","cost","i","iaddn","txDataZeroGas","txDataNonZeroGas","getBaseFee","fee","txGas","txCreation","getUpfrontCost","gasLimit","imul","gasPrice","iadd","value","validate","stringError","errors","push","join"],"sourceRoot":""}